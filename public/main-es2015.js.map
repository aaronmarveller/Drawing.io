{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.routes.ts","./src/app/components/editor/editor.component.ts","./src/app/components/editor/editor.component.html","./src/app/components/new-problem/new-problem.component.ts","./src/app/components/new-problem/new-problem.component.html","./src/app/components/problem-detail/problem-detail.component.ts","./src/app/components/problem-detail/problem-detail.component.html","./src/app/components/problem-list/problem-list.component.ts","./src/app/components/problem-list/problem-list.component.html","./src/app/service/collaboration.service.ts","./src/app/service/data.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'client';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { routing } from \"./app.routes\";\n\nimport { AppComponent } from './app.component';\nimport { FormsModule } from \"@angular/forms\";\nimport { ProblemListComponent } from './components/problem-list/problem-list.component';\nimport { ProblemDetailComponent } from './components/problem-detail/problem-detail.component';\nimport { NewProblemComponent } from './components/new-problem/new-problem.component';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { EditorComponent } from './components/editor/editor.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProblemListComponent,\n    ProblemDetailComponent,\n    NewProblemComponent,\n    EditorComponent\n  ],\n  imports: [\n    BrowserModule,\n    routing,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes, RouterModule } from \"@angular/router\";\nimport {ProblemListComponent} from \"./components/problem-list/problem-list.component\";\nimport {ProblemDetailComponent} from \"./components/problem-detail/problem-detail.component\";\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'problems',\n    pathMatch: 'full'\n  },\n  {\n    path: 'problems',\n    component: ProblemListComponent\n  },\n  {\n    path: 'problem/:id',\n    component: ProblemDetailComponent\n  },\n  {\n    path:'**',\n    redirectTo: 'problems'\n  }\n];\n\nexport const routing = RouterModule.forRoot(routes);\n","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from \"@angular/router\";\nimport {DataService} from \"../../service/data.service\";\nimport {CollaborationService} from \"../../service/collaboration.service\";\nimport {DomSanitizer} from \"@angular/platform-browser\";\n\ndeclare var ace: any;\n\n@Component({\n  selector: 'app-editor',\n  templateUrl: './editor.component.html',\n  styleUrls: ['./editor.component.css']\n})\nexport class EditorComponent implements OnInit {\n  public languages: string[] = ['Python', 'JavaScript', 'Java'];\n  editor: any;\n  problemId: string;\n  language: string = 'Python';\n  graph: string = '';\n  defaultContent = {\n    'Python': `import matplotlib\nimport matplotlib.pyplot as plt\nfrom io import BytesIO\nimport base64\nimport os\n\nmatplotlib.use('Agg')\nimage = BytesIO()\nplt.plot([1, 2, 3])\nplt.savefig(image, format='png')\nprint(base64.b64encode(image.getvalue()).decode('ascii'))`,\n    'JavaScript': '',\n    'Java': ''\n  };\n\n\n  constructor(private route: ActivatedRoute,\n              private collaborationService: CollaborationService,\n              private dataService: DataService,\n              private sanitizer: DomSanitizer) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      this.problemId = params['id'];\n      this.initEditor();\n    });\n\n    this.collaborationService.restoreBuffer();\n  }\n\n  initEditor(): void {\n    this.editor = ace.edit(\"editor\");\n    this.editor.setTheme(\"ace/theme/eclipse\");\n    this.resetEditor();\n\n    document.getElementsByTagName('textarea')[0].focus();\n\n    this.editor.setOption(\"maxLines\", 20);\n    this.editor.setOption(\"minLines\", 20);\n\n    this.editor.lastAppliedChange = null;\n\n    this.collaborationService.init(this.editor, this.problemId);\n\n    this.editor.on('change', e => {\n      console.log('editor changes: ' + JSON.stringify(e));\n\n      if (this.editor.lastAppliedChange !== e) {\n        this.collaborationService.change(JSON.stringify(e));\n      }\n    });\n\n  }\n\n  resetEditor(): void {\n    this.editor.setValue(this.defaultContent[this.language]);\n  }\n\n  setLanguage(language: string): void {\n    this.language = language;\n    this.resetEditor();\n  }\n\n  submit(): void {\n    const code = this.editor.getValue();\n    console.log(code);\n\n    const data = {\n      code,\n      lang: this.language.toLocaleLowerCase()\n    };\n\n    this.dataService.buildAndRun(data).then(res => {\n      console.log('img string==:' + res);\n      this.graph = 'data: image/png:base64,' + res;\n    });\n  }\n}\n","<section>\n  <header class=\"editor-header\">\n    <div class=\"row\">\n      <select class=\"form-control pull-left lang-select\" name=\"language\"\n              [(ngModel)]=\"language\" (change)=\"setLanguage(language)\">\n        <option *ngFor=\"let language of languages\" [value]=\"language\">\n          {{language}}\n        </option>\n      </select>\n\n      <button type=\"button\" class=\"btn btn-primary\" data-toggle = \"modal\" data-target=\"#myModal\">\n        Reset\n      </button>\n\n      <div class=\"modal fade\" id=\"myModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n        <div class=\"modal-dialog\" role=\"document\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h5 class=\"modal-title\" id=\"exampleModalLabel\">Are you sure</h5>\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <div class=\"modal-body\">\n              You will lose current code in the editor, are you sure?\n            </div>\n            <div class=\"modal-footer\">\n              <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\n              <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\"\n                      (click)=\"resetEditor()\">Reset</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </header>\n\n  <div id=\"editor\"></div>\n\n  <div></div>\n\n  <footer class=\"editor-footer\">\n    <button type=\"button\" class=\"btn btn-success pull-right\"\n            (click)=\"submit()\">Submit Solution</button>\n  </footer>\n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { Problem } from \"../../models/problem.model\";\nimport { DataService } from \"../../service/data.service\";\n\nconst DEFAULT_PROBLEM: Problem = Object.freeze({\n  id: 0,\n  name: '',\n  desc: '',\n  diff: 'easy'\n})\n\n@Component({\n  selector: 'app-new-problem',\n  templateUrl: './new-problem.component.html',\n  styleUrls: ['./new-problem.component.css']\n})\nexport class NewProblemComponent implements OnInit {\n  newProblem: Problem = Object.assign({}, DEFAULT_PROBLEM);\n  diffs: string[] = ['easy', 'medium', 'hard', 'super'];\n\n  constructor(private dataService: DataService) { }\n\n  ngOnInit(): void {\n  }\n\n  addProblem() {\n    this.dataService.addProblem(this.newProblem);\n    this.newProblem = Object.assign({}, DEFAULT_PROBLEM);\n  }\n\n}\n","<div>\n  <form #formElement = \"ngForm\">\n    <div class=\"form-group\">\n      <label for=\"problemName\">Problem Name</label>\n      <input name=\"problemName\" id=\"problemName\" class=\"form-control\"\n             type=\"text\" required placeholder=\"Please enter problem name\"\n             [(ngModel)]=\"newProblem.name\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"problemDesc\">problem description</label>\n      <textarea name=\"problemDesc\" id=\"problemDesc\" class=\"form-control\"\n                placeholder=\"Please enter problem description\"\n                [(ngModel)]=\"newProblem.desc\" rows=\"3\">\n      </textarea>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"problemDiff\">Difficulty</label>\n      <select class=\"form-control\" id=\"diff\" name=\"diff\"\n              [(ngModel)]=\"newProblem.diff\">\n        <option *ngFor= \"let diff of diffs\" [value]=\"diff\">\n          {{diff}}\n        </option>\n      </select>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <button type=\"submit\" class=\"btn btn-primary pull-right\"\n                (click)=\"addProblem()\">\n          Add Problem\n        </button>\n      </div>\n    </div>\n  </form>\n</div>\n<br/>\n<br/>\n","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Data} from \"@angular/router\";\nimport { Problem } from \"../../models/problem.model\";\nimport { DataService } from \"../../service/data.service\";\n\n@Component({\n  selector: 'app-problem-detail',\n  templateUrl: './problem-detail.component.html',\n  styleUrls: ['./problem-detail.component.css']\n})\nexport class ProblemDetailComponent implements OnInit {\n  problem: Problem;\n\n  constructor(private dataService: DataService, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      this.dataService.getProblem(+params['id']) // + convert to number\n        .then(problem => this.problem = problem);\n    })\n\n    /* demo code for promise & RxJS\n\n    let promise = new Promise(resolve => {\n      console.log('promise start');\n      setTimeout(() => {\n        resolve('promise resolved');\n      }, 3000);\n    });\n\n    promise.then((value: string) => {console.log(value)});\n\n    let stream$ = new Observable(observer => {\n      console.log('observable start');\n      observer.next(1);\n      observer.next(2);\n    });\n\n    let sub = stream$.subscribe(value => console.log(value));\n    let sub2 = stream$.subscribe(value => console.log(value));\n\n     */\n  }\n\n}\n","<div class=\"container\" *ngIf=\"problem\">\n  <div class=\"col-sm-12 col-md-4\">\n    <div>\n      <h2>\n        {{problem.id}}. {{problem.name}}\n      </h2>\n      <p>\n        {{problem.desc}}\n      </p>\n    </div>\n  </div>\n  <div class=\"d-none d-sm-block hidden-xs col-sm-12 col-md-8\">\n    <app-editor></app-editor>\n  </div>\n\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from \"rxjs\";\nimport { Problem } from \"../../models/problem.model\";\nimport { DataService } from \"../../service/data.service\";\n\n@Component({\n  selector: 'app-problem-list',\n  templateUrl: './problem-list.component.html',\n  styleUrls: ['./problem-list.component.css']\n})\nexport class ProblemListComponent implements OnInit {\n  problems: Problem[];\n  subscriptionProblems: Subscription;\n\n  constructor(private dataService: DataService) { }\n\n  ngOnInit(): void {\n    this.getProblem();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptionProblems.unsubscribe();\n  }\n\n  getProblem(): void {\n    this.subscriptionProblems = this.dataService.getProblems()\n      .subscribe(problems => {\n        this.problems = problems;\n      })\n  }\n\n}\n","<div class=\"container\">\n  <app-new-problem></app-new-problem>\n  <div class=\"list-group\">\n    <a class=\"list-group-item\" *ngFor=\"let problem of problems\" [routerLink] = \"['/problem', problem.id]\">\n      <span class=\"{{'pull-left badge difficulty diff-' + problem.diff.toLocaleLowerCase()}}\">\n        {{problem.diff}}\n      </span>\n      <strong class=\"title\">{{problem.id}}. {{problem.name}}</strong>\n    </a>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\n\ndeclare var io: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CollaborationService {\n  collaborationSocket: any;\n\n  constructor() { }\n\n  init(editor: any, problemId: string): void {\n    this.collaborationSocket = io(window.location.origin, { query: 'problemId=' + problemId});\n\n    this.collaborationSocket.on(\"message\", (message) => {\n      console.log(\"message received: \" + message);\n    });\n\n    this.collaborationSocket.on('change', (delta: string) => {\n      console.log('collaboration: editor changes by ' + delta);\n      delta = JSON.parse(delta);\n      editor.lastAppliedChange = delta;\n      editor.getSession().getDocument().applyDeltas([delta]);\n    });\n  }\n\n  change(delta: string): void {\n    this.collaborationSocket.emit('change', delta);\n  }\n\n  restoreBuffer(): void {\n    this.collaborationSocket.emit('restoreBuffer');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Problem } from '../models/problem.model';\n\nimport { HttpClient, HttpHeaders, HttpResponse } from \"@angular/common/http\";\nimport { Observable, BehaviorSubject } from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  private _problemSource = new BehaviorSubject<Problem[]>([]);\n\n  constructor(private httpClient: HttpClient) { }\n\n  getProblems(): Observable<Problem[]> {\n    this.httpClient.get('api/v1/problems')\n      .toPromise()\n      .then((res: any) => {\n        this._problemSource.next(res);\n      })\n      .catch(this.handleError);\n\n    return this._problemSource.asObservable();\n  }\n\n  getProblem(id: number): Promise<Problem> {\n    //traverse all the problems and find problem whose id is given one\n    return this.httpClient.get(`api/v1/problems/${id}`)\n      .toPromise()\n      .then((res: any) => res)\n      .catch(this.handleError);\n  }\n\n  addProblem(problem: Problem) {\n    // problem.id = this.problems.length + 1;\n    // this.problems.push(problem);\n    const options = { headers: new HttpHeaders({'Content-Type': 'application/json'}) };\n    return this.httpClient.post('api/v1/problems', problem, options)\n      .toPromise()\n      .then((res: any) => {\n        this.getProblems();\n        return res;\n      })\n      .catch(this.handleError);\n  }\n\n  buildAndRun(data: any): Promise<any> {\n    const options = { headers: new HttpHeaders({'Content-Type': 'application/json'}) };\n    return this.httpClient.post('api/v1/build_and_run', data, options)\n      .toPromise()\n      .then((res: any) => {\n        return res;\n      })\n      .catch(this.handleError);\n  }\n\n  private handleError(error: any): Promise<any> {\n    return Promise.reject(error.body || error);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}