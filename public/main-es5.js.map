{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.routes.ts","webpack:///src/app/components/editor/editor.component.ts","webpack:///src/app/components/editor/editor.component.html","webpack:///src/app/components/new-problem/new-problem.component.ts","webpack:///src/app/components/new-problem/new-problem.component.html","webpack:///src/app/components/problem-detail/problem-detail.component.ts","webpack:///src/app/components/problem-detail/problem-detail.component.html","webpack:///src/app/components/problem-list/problem-list.component.ts","webpack:///src/app/components/problem-list/problem-list.component.html","webpack:///src/app/service/collaboration.service.ts","webpack:///src/app/service/data.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","routes","path","redirectTo","pathMatch","component","routing","forRoot","EditorComponent","route","collaborationService","dataService","sanitizer","languages","language","graph","defaultContent","params","subscribe","problemId","initEditor","restoreBuffer","editor","ace","edit","setTheme","resetEditor","document","getElementsByTagName","focus","setOption","lastAppliedChange","init","on","console","log","JSON","stringify","change","setValue","getValue","data","lang","toLocaleLowerCase","buildAndRun","res","setLanguage","submit","DEFAULT_PROBLEM","Object","freeze","name","desc","diff","NewProblemComponent","newProblem","assign","diffs","addProblem","ProblemDetailComponent","getProblem","problem","ProblemListComponent","subscriptionProblems","unsubscribe","getProblems","problems","CollaborationService","collaborationSocket","io","window","location","origin","query","message","delta","parse","getSession","getDocument","applyDeltas","emit","providedIn","DataService","httpClient","_problemSource","get","toPromise","next","handleError","asObservable","options","headers","post","error","reject","body","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'client';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { routing } from \"./app.routes\";\n\nimport { AppComponent } from './app.component';\nimport { FormsModule } from \"@angular/forms\";\nimport { ProblemListComponent } from './components/problem-list/problem-list.component';\nimport { ProblemDetailComponent } from './components/problem-detail/problem-detail.component';\nimport { NewProblemComponent } from './components/new-problem/new-problem.component';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { EditorComponent } from './components/editor/editor.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProblemListComponent,\n    ProblemDetailComponent,\n    NewProblemComponent,\n    EditorComponent\n  ],\n  imports: [\n    BrowserModule,\n    routing,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes, RouterModule } from \"@angular/router\";\nimport {ProblemListComponent} from \"./components/problem-list/problem-list.component\";\nimport {ProblemDetailComponent} from \"./components/problem-detail/problem-detail.component\";\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'problems',\n    pathMatch: 'full'\n  },\n  {\n    path: 'problems',\n    component: ProblemListComponent\n  },\n  {\n    path: 'problem/:id',\n    component: ProblemDetailComponent\n  },\n  {\n    path:'**',\n    redirectTo: 'problems'\n  }\n];\n\nexport const routing = RouterModule.forRoot(routes);\n","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from \"@angular/router\";\nimport {DataService} from \"../../service/data.service\";\nimport {CollaborationService} from \"../../service/collaboration.service\";\nimport {DomSanitizer} from \"@angular/platform-browser\";\n\ndeclare var ace: any;\n\n@Component({\n  selector: 'app-editor',\n  templateUrl: './editor.component.html',\n  styleUrls: ['./editor.component.css']\n})\nexport class EditorComponent implements OnInit {\n  public languages: string[] = ['Python', 'JavaScript', 'Java'];\n  editor: any;\n  problemId: string;\n  language: string = 'Python';\n  graph: string = '';\n  defaultContent = {\n    'Python': `import matplotlib\nimport matplotlib.pyplot as plt\nfrom io import BytesIO\nimport base64\nimport os\n\nmatplotlib.use('Agg')\nimage = BytesIO()\nplt.plot([1, 2, 3])\nplt.savefig(image, format='png')\nprint(base64.b64encode(image.getvalue()).decode('ascii'))`,\n    'JavaScript': '',\n    'Java': ''\n  };\n\n\n  constructor(private route: ActivatedRoute,\n              private collaborationService: CollaborationService,\n              private dataService: DataService,\n              private sanitizer: DomSanitizer) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      this.problemId = params['id'];\n      this.initEditor();\n    });\n\n    this.collaborationService.restoreBuffer();\n  }\n\n  initEditor(): void {\n    this.editor = ace.edit(\"editor\");\n    this.editor.setTheme(\"ace/theme/eclipse\");\n    this.resetEditor();\n\n    document.getElementsByTagName('textarea')[0].focus();\n\n    this.editor.setOption(\"maxLines\", 20);\n    this.editor.setOption(\"minLines\", 20);\n\n    this.editor.lastAppliedChange = null;\n\n    this.collaborationService.init(this.editor, this.problemId);\n\n    this.editor.on('change', e => {\n      console.log('editor changes: ' + JSON.stringify(e));\n\n      if (this.editor.lastAppliedChange !== e) {\n        this.collaborationService.change(JSON.stringify(e));\n      }\n    });\n\n  }\n\n  resetEditor(): void {\n    this.editor.setValue(this.defaultContent[this.language]);\n  }\n\n  setLanguage(language: string): void {\n    this.language = language;\n    this.resetEditor();\n  }\n\n  submit(): void {\n    const code = this.editor.getValue();\n    console.log(code);\n\n    const data = {\n      code,\n      lang: this.language.toLocaleLowerCase()\n    };\n\n    this.dataService.buildAndRun(data).then(res => {\n      console.log('img string==:' + res);\n      this.graph = 'data: image/png:base64,' + res;\n    });\n  }\n}\n","<section>\n  <header class=\"editor-header\">\n    <div class=\"row\">\n      <select class=\"form-control pull-left lang-select\" name=\"language\"\n              [(ngModel)]=\"language\" (change)=\"setLanguage(language)\">\n        <option *ngFor=\"let language of languages\" [value]=\"language\">\n          {{language}}\n        </option>\n      </select>\n\n      <button type=\"button\" class=\"btn btn-primary\" data-toggle = \"modal\" data-target=\"#myModal\">\n        Reset\n      </button>\n\n      <div class=\"modal fade\" id=\"myModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n        <div class=\"modal-dialog\" role=\"document\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h5 class=\"modal-title\" id=\"exampleModalLabel\">Are you sure</h5>\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <div class=\"modal-body\">\n              You will lose current code in the editor, are you sure?\n            </div>\n            <div class=\"modal-footer\">\n              <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\n              <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\"\n                      (click)=\"resetEditor()\">Reset</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </header>\n\n  <div id=\"editor\"></div>\n\n  <div></div>\n\n  <footer class=\"editor-footer\">\n    <button type=\"button\" class=\"btn btn-success pull-right\"\n            (click)=\"submit()\">Submit Solution</button>\n  </footer>\n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { Problem } from \"../../models/problem.model\";\nimport { DataService } from \"../../service/data.service\";\n\nconst DEFAULT_PROBLEM: Problem = Object.freeze({\n  id: 0,\n  name: '',\n  desc: '',\n  diff: 'easy'\n})\n\n@Component({\n  selector: 'app-new-problem',\n  templateUrl: './new-problem.component.html',\n  styleUrls: ['./new-problem.component.css']\n})\nexport class NewProblemComponent implements OnInit {\n  newProblem: Problem = Object.assign({}, DEFAULT_PROBLEM);\n  diffs: string[] = ['easy', 'medium', 'hard', 'super'];\n\n  constructor(private dataService: DataService) { }\n\n  ngOnInit(): void {\n  }\n\n  addProblem() {\n    this.dataService.addProblem(this.newProblem);\n    this.newProblem = Object.assign({}, DEFAULT_PROBLEM);\n  }\n\n}\n","<div>\n  <form #formElement = \"ngForm\">\n    <div class=\"form-group\">\n      <label for=\"problemName\">Problem Name</label>\n      <input name=\"problemName\" id=\"problemName\" class=\"form-control\"\n             type=\"text\" required placeholder=\"Please enter problem name\"\n             [(ngModel)]=\"newProblem.name\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"problemDesc\">problem description</label>\n      <textarea name=\"problemDesc\" id=\"problemDesc\" class=\"form-control\"\n                placeholder=\"Please enter problem description\"\n                [(ngModel)]=\"newProblem.desc\" rows=\"3\">\n      </textarea>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"problemDiff\">Difficulty</label>\n      <select class=\"form-control\" id=\"diff\" name=\"diff\"\n              [(ngModel)]=\"newProblem.diff\">\n        <option *ngFor= \"let diff of diffs\" [value]=\"diff\">\n          {{diff}}\n        </option>\n      </select>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <button type=\"submit\" class=\"btn btn-primary pull-right\"\n                (click)=\"addProblem()\">\n          Add Problem\n        </button>\n      </div>\n    </div>\n  </form>\n</div>\n<br/>\n<br/>\n","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Data} from \"@angular/router\";\nimport { Problem } from \"../../models/problem.model\";\nimport { DataService } from \"../../service/data.service\";\n\n@Component({\n  selector: 'app-problem-detail',\n  templateUrl: './problem-detail.component.html',\n  styleUrls: ['./problem-detail.component.css']\n})\nexport class ProblemDetailComponent implements OnInit {\n  problem: Problem;\n\n  constructor(private dataService: DataService, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      this.dataService.getProblem(+params['id']) // + convert to number\n        .then(problem => this.problem = problem);\n    })\n\n    /* demo code for promise & RxJS\n\n    let promise = new Promise(resolve => {\n      console.log('promise start');\n      setTimeout(() => {\n        resolve('promise resolved');\n      }, 3000);\n    });\n\n    promise.then((value: string) => {console.log(value)});\n\n    let stream$ = new Observable(observer => {\n      console.log('observable start');\n      observer.next(1);\n      observer.next(2);\n    });\n\n    let sub = stream$.subscribe(value => console.log(value));\n    let sub2 = stream$.subscribe(value => console.log(value));\n\n     */\n  }\n\n}\n","<div class=\"container\" *ngIf=\"problem\">\n  <div class=\"col-sm-12 col-md-4\">\n    <div>\n      <h2>\n        {{problem.id}}. {{problem.name}}\n      </h2>\n      <p>\n        {{problem.desc}}\n      </p>\n    </div>\n  </div>\n  <div class=\"d-none d-sm-block hidden-xs col-sm-12 col-md-8\">\n    <app-editor></app-editor>\n  </div>\n\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from \"rxjs\";\nimport { Problem } from \"../../models/problem.model\";\nimport { DataService } from \"../../service/data.service\";\n\n@Component({\n  selector: 'app-problem-list',\n  templateUrl: './problem-list.component.html',\n  styleUrls: ['./problem-list.component.css']\n})\nexport class ProblemListComponent implements OnInit {\n  problems: Problem[];\n  subscriptionProblems: Subscription;\n\n  constructor(private dataService: DataService) { }\n\n  ngOnInit(): void {\n    this.getProblem();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptionProblems.unsubscribe();\n  }\n\n  getProblem(): void {\n    this.subscriptionProblems = this.dataService.getProblems()\n      .subscribe(problems => {\n        this.problems = problems;\n      })\n  }\n\n}\n","<div class=\"container\">\n  <app-new-problem></app-new-problem>\n  <div class=\"list-group\">\n    <a class=\"list-group-item\" *ngFor=\"let problem of problems\" [routerLink] = \"['/problem', problem.id]\">\n      <span class=\"{{'pull-left badge difficulty diff-' + problem.diff.toLocaleLowerCase()}}\">\n        {{problem.diff}}\n      </span>\n      <strong class=\"title\">{{problem.id}}. {{problem.name}}</strong>\n    </a>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\n\ndeclare var io: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CollaborationService {\n  collaborationSocket: any;\n\n  constructor() { }\n\n  init(editor: any, problemId: string): void {\n    this.collaborationSocket = io(window.location.origin, { query: 'problemId=' + problemId});\n\n    this.collaborationSocket.on(\"message\", (message) => {\n      console.log(\"message received: \" + message);\n    });\n\n    this.collaborationSocket.on('change', (delta: string) => {\n      console.log('collaboration: editor changes by ' + delta);\n      delta = JSON.parse(delta);\n      editor.lastAppliedChange = delta;\n      editor.getSession().getDocument().applyDeltas([delta]);\n    });\n  }\n\n  change(delta: string): void {\n    this.collaborationSocket.emit('change', delta);\n  }\n\n  restoreBuffer(): void {\n    this.collaborationSocket.emit('restoreBuffer');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Problem } from '../models/problem.model';\n\nimport { HttpClient, HttpHeaders, HttpResponse } from \"@angular/common/http\";\nimport { Observable, BehaviorSubject } from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  private _problemSource = new BehaviorSubject<Problem[]>([]);\n\n  constructor(private httpClient: HttpClient) { }\n\n  getProblems(): Observable<Problem[]> {\n    this.httpClient.get('api/v1/problems')\n      .toPromise()\n      .then((res: any) => {\n        this._problemSource.next(res);\n      })\n      .catch(this.handleError);\n\n    return this._problemSource.asObservable();\n  }\n\n  getProblem(id: number): Promise<Problem> {\n    //traverse all the problems and find problem whose id is given one\n    return this.httpClient.get(`api/v1/problems/${id}`)\n      .toPromise()\n      .then((res: any) => res)\n      .catch(this.handleError);\n  }\n\n  addProblem(problem: Problem) {\n    // problem.id = this.problems.length + 1;\n    // this.problems.push(problem);\n    const options = { headers: new HttpHeaders({'Content-Type': 'application/json'}) };\n    return this.httpClient.post('api/v1/problems', problem, options)\n      .toPromise()\n      .then((res: any) => {\n        this.getProblems();\n        return res;\n      })\n      .catch(this.handleError);\n  }\n\n  buildAndRun(data: any): Promise<any> {\n    const options = { headers: new HttpHeaders({'Content-Type': 'application/json'}) };\n    return this.httpClient.post('api/v1/build_and_run', data, options)\n      .toPromise()\n      .then((res: any) => {\n        return res;\n      })\n      .catch(this.handleError);\n  }\n\n  private handleError(error: any): Promise<any> {\n    return Promise.reject(error.body || error);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}